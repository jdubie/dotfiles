set nocompatible              " be iMproved
filetype off                  " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'gmarik/vundle'

" My bundles here:
"
" original repos on GitHub
Plugin 'wookiehangover/jshint.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'kchmck/vim-coffee-script'
Plugin 'bling/vim-airline'
Plugin 'derekwyatt/vim-scala'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'rking/ag.vim'
Plugin 'fatih/vim-go'
Plugin 'scrooloose/syntastic'
Plugin 'kien/ctrlp.vim'
Plugin 'mxw/vim-jsx'
Plugin 'wizicer/vim-jison'
Plugin 'chriskempson/vim-tomorrow-theme'

call vundle#end()
filetype plugin indent on

syntax enable
"colorscheme Tomorrow-Night-Blue
"colorscheme Tomorrow-Night-Bright
colorscheme Tomorrow-Night-Eighties
"colorscheme Tomorrow-Night
"colorscheme Tomorrow
"set background=dark
"colorscheme solarized

" *******************************************************************************
" Highlight EOL whitespace, http://vim.wikia.com/wiki/Highlight_unwanted_spaces
highlight ExtraWhitespace ctermbg=darkred guibg=#382424
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/

" The above flashes annoyingly while typing, be calmer in insert mode
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/

function! s:FixWhitespace(line1,line2)
    let l:save_cursor = getpos(".")
    silent! execute ':' . a:line1 . ',' . a:line2 . 's/\s\+$//'
    call setpos('.', l:save_cursor)
endfunction

" Run :FixWhitespace to remove end of line white space
command! -range=% FixWhitespace call <SID>FixWhitespace(<line1>,<line2>)
" *******************************************************************************

" Tab settings
set shiftwidth=2
set tabstop=2
set softtabstop=2
set expandtab

set smartindent
set number
set nobackup      " prevents file.txt.swp
set nowritebackup " prevents file.txt~ on write

set history=50
set ruler
set showcmd
set incsearch
set hlsearch
filetype plugin indent on

set noswapfile  " removes annoying swap
set autoread    " automatically reloads (i.e. on git pull)

set number      " line numbers

" switch bewtween .c and .h
map t :e %:p:s,.h$,.X123X,:s,.c$,.h,:s,.X123X$,.c,<CR>
map <F3> :vs %:p:s,.h$,.X123X,:s,.c$,.h,:s,.X123X$,.c,<CR>

" easier than hitting <Esc>
imap fj <Esc><Right>
vmap fj <Esc><Right>

" disable folding
set foldlevelstart=99

" don't have to shift ;
nmap ; :

" don't automatically add comments - annoying for pasting into vim
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" simple underline
set cursorline

" use comma as <leader> key
let mapleader=","
nmap , <Space>
set winminwidth=0

" Splits manipulation mappings
nnoremap <leader>ma <C-w>400><C-w>400+^
nnoremap <leader>mi <C-w>400<<C-w>400-
nnoremap <leader>j <C-w>j<C-w>400+^
nnoremap <leader>k <C-w>k<C-w>400+^

" Splits resize
nnoremap <leader>H <C-w>h<C-w>40>^
nnoremap <leader>L <C-w>l<C-w>40>^

" Vertical split normalize
nnoremap <leader>m :resize -10<CR>

" window navigation
nmap <silent> <leader>h :wincmd h<CR>
nmap <silent> <leader>l :wincmd l<CR>

" update current working directory
autocmd BufEnter * silent! lcd %:p:h

" display airline with only one split
set laststatus=2

" ctrlp
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=15
let g:ctrlp_working_path_mode=0
